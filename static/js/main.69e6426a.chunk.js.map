{"version":3,"sources":["bridgeTest.jpg","logo.svg","ListScrollToItemOutside.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","list","id","ListScrollToItem","refs","reduce","acc","value","createRef","handleClick","current","scrollIntoView","behavior","block","align","type","ButtonGroup","aria-label","Button","style","fontSize","fontWeight","fontFamily","variant","size","onClick","Container","Row","key","ref","Col","lg","href","md","span","offset","className","alt","src","bridgeTest","Form","Group","controlId","Label","Control","placeholder","Text","App","ListScrollToItemOutside","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.69e6426a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bridgeTest.157c0dc3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { createRef } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport bridgeTest from './bridgeTest.jpg';\n\n// change style of the buttons\n\nconst list = [\n  {\n    id: 'Story',\n\n  },\n  {\n    id: 'Mission',\n\n  },\n  {\n    id: 'Event',\n\n  },\n  {\n    id: 'Get Involved',\n\n  },\n];\n\nconst ListScrollToItem = () => {\n  const refs = list.reduce((acc, value) => {\n    acc[value.id] = createRef();\n    return acc;\n  }, {});\n\n  // Scroll Into View API: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n  const handleClick = id =>\n    refs[id].current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n\n  return (\n    <div align = 'center'>\n      <style type = \"text/css\">\n        {`\n          .btn-new {\n            background-color: white;\n            border: black;\n            border-radius: 3px;\n            color: black;\n          }\n          .btn-top {\n            padding : 2rem 3rem;\n            font-size: 50 rem;\n          }\n        `}\n      </style>\n      <ul>\n        <ButtonGroup aria-label = \"Group\" align = \"center\">\n            <Button \n              style={{fontSize: 30, fontWeight: 'bold', fontFamily: 'futura'}}\n              variant = \"outline-dark\"\n              size=\"top\"\n              onClick={() => handleClick('Story')}\n            >\n              {'Story'}\n            </Button>\n            <Button \n              style={{fontSize: 30, fontWeight: 'bold', fontFamily: 'futura'}}\n              variant = \"outline-dark\"\n              size = \"top\"\n              \n              //class=\"w3-button w3-black\"\n              //type=\"button\"\n              onClick={() => handleClick('Mission')}\n            >\n              {'Mission'}\n            </Button>\n            <Button \n              \n              style={{fontSize: 30, fontWeight: 'bold', fontFamily: 'futura'}}\n              variant = \"outline-dark\"\n              size = \"top\"\n              onClick={() => handleClick('Event')}\n            >\n              {'Event'}\n            </Button>\n            <Button \n              style={{fontSize: 30, fontWeight: 'bold', fontFamily: 'futura'}}\n              variant = \"outline-dark\"\n              size = \"top\"\n              onClick={() => handleClick('Get Involved')}\n            >\n              {'Get Involved'}\n            </Button>\n        </ButtonGroup>\n        {}\n      </ul>\n\n      <ul>\n        <Container align=\"center\" style={{fontSize: 30, fontWeight: 'bold', fontFamily: 'futura'}} >\n          <Row key = 'Story' ref={refs['Story']}>\n            <Col lg=\"auto\" >\n              <Row>{'STORY: '}</Row>\n              <Row align =\"left\" style={{fontSize: 12, fontWeight: 'normal', fontFamily: 'futura'}}>\n                Penn has a thriving and intelligent Greek Life. However, there is limited interaction between\n                these large, philanthropic entities. As a result, the Penn Greek Relays present the opportunity for\n                 cooperation amongst all Greek Organizations to raise significant amounts of money for\n                 <a href= 'https://www.womenagainstabuse.org/'> Women Against Abuse</a>,\n                  a Philadelphia grass roots Non-Profit aiming at protecting families from domestic abuse.\n              </Row>\n            </Col>\n            <Col md={{ span: 4, offset: 4 }}>{`STORY`}</Col>\n          </Row>\n          <Row key = 'Mission' ref={refs['Mission']}>\n            <Col lg=\"auto\" className='Row-Header'>{`MISSION: `}</Col>\n            <Col md={{ span: 3, offset: 3 }}>{'TEST FONT'}<img alt=\"Test Pic\" src= {bridgeTest}></img></Col>\n          </Row>\n          <Row key = 'Event' ref={refs['Event']}>\n            <Col lg=\"auto\">{`EVENT: `}</Col>\n            <Col md={{ span: 6, offset: 3 }}>{`EVENT`}</Col>\n          </Row>\n          <Row key = 'Get Involved' ref={refs['Get Involved']}>\n            <Col lg=\"auto\" className='Row-Header'>{`GET INVOLVED: `}</Col>\n            <Col md={{ span: 6, offset: 3 }}>{`GET INVOLVED`}</Col>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Submit your email here to get involved</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control type=\"name\" placeholder=\"Name\" />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n          </Form>\n          </Row>\n        </Container>\n      </ul>\n    </div>\n  );\n};\n\nexport default ListScrollToItem;","import React from 'react';\n//import \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from './logo.svg';\nimport './App.css';\nimport ListScrollToItemOutside from './ListScrollToItemOutside';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div id=\"top banner\" align = \"center\">\n        <figure align=\"center\">\n        <h3 align='center' className='App-Title'>THE PENN GREEK RELAYS</h3>\n        </figure>\n      </div>\n      \n      <ListScrollToItemOutside />\n      <hr />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}